#!/bin/bash

# Check if version_name argument is provided
if [ -z "$1" ]; then
    echo "Error: version_name is not specified."
    echo "Usage: $0 <version_name>"
    exit 1
fi

# Get version_name from the first argument
version_name=$1

# Extract current versionCode from build.gradle.kts
version_code=$(grep -oP 'versionCode\s*=\s*\K\d+' app/build.gradle.kts)
if [ -z "$version_code" ]; then
    echo "Error: Failed to extract versionCode from app/build.gradle.kts."
    exit 1
fi

# Increment versionCode by 1
version_code=$((version_code + 1))
if ! [[ "$version_code" =~ ^[0-9]+$ ]]; then
    echo "Error: Failed to increment versionCode."
    exit 1
fi

# Update versionCode in build.gradle.kts
sed -i "s/versionCode\s*=\s*[0-9]\+/versionCode = $version_code/g" app/build.gradle.kts
if ! grep -q "versionCode = $version_code" app/build.gradle.kts; then
    echo "Error: Failed to update versionCode in app/build.gradle.kts."
    exit 1
fi

# Update versionName in build.gradle.kts
sed -i "s/versionName\s*=\s*\"[^\"]*\"/versionName = \"$version_name\"/g" app/build.gradle.kts
if ! grep -q "versionName = \"$version_name\"" app/build.gradle.kts; then
    echo "Error: Failed to update versionName in app/build.gradle.kts."
    exit 1
fi

sed -i -E "s/(Odoo Mobile v)([0-9]+\.[0-9]+\.[0-9]+)( \(Framework\))/\1${version_name}\3/g" README.md

sed -i -E "s/(v)([0-9]+\.[0-9]+\.[0-9]+)( \(Build )([0-9]+)(\))/\1${version_name}\3${version_code}\5/g" README.md

sed -i -E "s/(Build )([0-9]+)( )/\1${version_code}\3/g" README.md

# Make gradlew executable
chmod +x ./gradlew
if [ $? -ne 0 ]; then
    echo "Error: Failed to change permissions for gradlew."
    exit 1
fi

# Build the project
./gradlew spotlessApply
./gradlew --no-daemon assembleRelease
./gradlew --no-daemon bundleRelease
if [ $? -ne 0 ]; then
    echo "Error: Project build failed."
    exit 1
fi

echo "Build completed successfully!"
